{"remainingRequest":"C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\src\\TagService.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\src\\TagService.js","mtime":1574417513397},{"path":"C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\User\\Desktop\\Work\\CPE327 Software Engineer\\streaddit\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJDOlxcVXNlcnNcXFVzZXJcXERlc2t0b3BcXFdvcmtcXENQRTMyNyBTb2Z0d2FyZSBFbmdpbmVlclxcc3RyZWFkZGl0XFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXFVzZXJzXFxVc2VyXFxEZXNrdG9wXFxXb3JrXFxDUEUzMjcgU29mdHdhcmUgRW5naW5lZXJcXHN0cmVhZGRpdFxcY2xpZW50XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOlxcVXNlcnNcXFVzZXJcXERlc2t0b3BcXFdvcmtcXENQRTMyNyBTb2Z0d2FyZSBFbmdpbmVlclxcc3RyZWFkZGl0XFxjbGllbnRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lLWNvcmVqczMvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwp2YXIgdXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC90YWcnOwoKdmFyIFRhZ1NlcnZpY2UgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBUYWdTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRhZ1NlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFRhZ1NlcnZpY2UsIG51bGwsIFt7CiAgICBrZXk6ICJnZXRUYWciLAogICAgLy9nZXQgdGFnCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VGFnKCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gX2NhbGxlZShyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICB2YXIgcmVzLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXN5bmMoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcChheGlvcy5nZXQodXJsKSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEubWFwKGZ1bmN0aW9uICh0YWcpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIHRhZyk7CiAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgcmVqZWN0KF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIG51bGwsIG51bGwsIFtbMCwgOF1dKTsKICAgICAgfSk7CiAgICB9IC8vYWRkIHRhZwogICAgLy9kZWxldGUgdGFnCiAgICAvL3VwZGF0ZSB0YWcKCiAgfV0pOwoKICByZXR1cm4gVGFnU2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgVGFnU2VydmljZTs="},{"version":3,"sources":["C:/Users/User/Desktop/Work/CPE327 Software Engineer/streaddit/client/src/TagService.js"],"names":["axios","url","TagService","Promise","resolve","reject","get","res","data","map","tag"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAG,2BAAZ;;IAEMC,U;;;;;;;;;AAEF;6BACe;AACX,aAAO,IAAIC,OAAJ,CAAY,iBAAOC,OAAP,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEOL,KAAK,CAACM,GAAN,CAAUL,GAAV,CAFP;;AAAA;AAELM,gBAAAA,GAFK;AAGLC,gBAAAA,IAHK,GAGED,GAAG,CAACC,IAHN;AAIXJ,gBAAAA,OAAO,CACHI,IAAI,CAACC,GAAL,CAAS,UAAAC,GAAG;AAAA,2CACLA,GADK;AAAA,iBAAZ,CADG,CAAP;AAJW;AAAA;;AAAA;AAAA;AAAA;AAUXL,gBAAAA,MAAM,aAAN;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAZ,CAAP;AAaH,K,CAED;AACA;AACA;;;;;;;AAGJ,eAAeH,UAAf","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = 'http://localhost:5000/tag'\r\n\r\nclass TagService{\r\n\r\n    //get tag\r\n    static getTag(){\r\n        return new Promise(async (resolve,reject)=>{\r\n            try{\r\n                const res = await axios.get(url)\r\n                const data = res.data\r\n                resolve(\r\n                    data.map(tag => ({\r\n                        ...tag\r\n                    }))\r\n                )\r\n            }catch(err){\r\n                reject(err)\r\n            }\r\n        })\r\n    }\r\n\r\n    //add tag\r\n    //delete tag\r\n    //update tag\r\n}\r\n\r\nexport default TagService"]}]}